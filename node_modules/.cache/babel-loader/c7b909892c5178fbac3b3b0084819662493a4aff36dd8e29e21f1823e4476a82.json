{"ast":null,"code":"// Uses CRA proxy in dev, else REACT_APP_API_BASE or fallback.\nconst API_BASE = process.env.NODE_ENV === \"development\" && !process.env.REACT_APP_API_BASE ? \"\" // dev: use proxy; fetch('/api/...') -> http://localhost:8081\n: process.env.REACT_APP_API_BASE || \"http://localhost:8081\";\nasync function request(path, {\n  method = \"GET\",\n  body,\n  headers\n} = {}) {\n  const res = await fetch(`${API_BASE}${path}`, {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(headers || {})\n    },\n    body: body ? JSON.stringify(body) : undefined\n  });\n  const data = await res.json().catch(() => ({}));\n  if (!res.ok) {\n    const msg = (data === null || data === void 0 ? void 0 : data.message) || `Request failed (${res.status})`;\n    throw new Error(msg);\n  }\n  return data; // backend returns { message: \"...\" }\n}\nexport const api = {\n  signup: ({\n    name,\n    email,\n    password\n  }) => request(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: {\n      name,\n      email,\n      password\n    }\n  }),\n  login: ({\n    email,\n    password\n  }) => request(\"/api/auth/login\", {\n    method: \"POST\",\n    body: {\n      email,\n      password\n    }\n  })\n};","map":{"version":3,"names":["API_BASE","process","env","NODE_ENV","REACT_APP_API_BASE","request","path","method","body","headers","res","fetch","JSON","stringify","undefined","data","json","catch","ok","msg","message","status","Error","api","signup","name","email","password","login"],"sources":["C:/Users/saide/demo1/StudentEnrollment/src/api.js"],"sourcesContent":["// Uses CRA proxy in dev, else REACT_APP_API_BASE or fallback.\r\nconst API_BASE =\r\n  process.env.NODE_ENV === \"development\" && !process.env.REACT_APP_API_BASE\r\n    ? \"\" // dev: use proxy; fetch('/api/...') -> http://localhost:8081\r\n    : (process.env.REACT_APP_API_BASE || \"http://localhost:8081\");\r\n\r\nasync function request(path, { method = \"GET\", body, headers } = {}) {\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    method,\r\n    headers: { \"Content-Type\": \"application/json\", ...(headers || {}) },\r\n    body: body ? JSON.stringify(body) : undefined,\r\n  });\r\n  const data = await res.json().catch(() => ({}));\r\n  if (!res.ok) {\r\n    const msg = data?.message || `Request failed (${res.status})`;\r\n    throw new Error(msg);\r\n  }\r\n  return data; // backend returns { message: \"...\" }\r\n}\r\n\r\nexport const api = {\r\n  signup: ({ name, email, password }) =>\r\n    request(\"/api/auth/signup\", { method: \"POST\", body: { name, email, password } }),\r\n  login: ({ email, password }) =>\r\n    request(\"/api/auth/login\", { method: \"POST\", body: { email, password } }),\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GACZC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAI,CAACF,OAAO,CAACC,GAAG,CAACE,kBAAkB,GACrE,EAAE,CAAC;AAAA,EACFH,OAAO,CAACC,GAAG,CAACE,kBAAkB,IAAI,uBAAwB;AAEjE,eAAeC,OAAOA,CAACC,IAAI,EAAE;EAAEC,MAAM,GAAG,KAAK;EAAEC,IAAI;EAAEC;AAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;EACnE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,QAAQ,GAAGM,IAAI,EAAE,EAAE;IAC5CC,MAAM;IACNE,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,IAAIA,OAAO,IAAI,CAAC,CAAC;IAAE,CAAC;IACnED,IAAI,EAAEA,IAAI,GAAGI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,GAAGM;EACtC,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,IAAI,CAACP,GAAG,CAACQ,EAAE,EAAE;IACX,MAAMC,GAAG,GAAG,CAAAJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,OAAO,KAAI,mBAAmBV,GAAG,CAACW,MAAM,GAAG;IAC7D,MAAM,IAAIC,KAAK,CAACH,GAAG,CAAC;EACtB;EACA,OAAOJ,IAAI,CAAC,CAAC;AACf;AAEA,OAAO,MAAMQ,GAAG,GAAG;EACjBC,MAAM,EAAEA,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,KAChCtB,OAAO,CAAC,kBAAkB,EAAE;IAAEE,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE;MAAEiB,IAAI;MAAEC,KAAK;MAAEC;IAAS;EAAE,CAAC,CAAC;EAClFC,KAAK,EAAEA,CAAC;IAAEF,KAAK;IAAEC;EAAS,CAAC,KACzBtB,OAAO,CAAC,iBAAiB,EAAE;IAAEE,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE;MAAEkB,KAAK;MAAEC;IAAS;EAAE,CAAC;AAC5E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}